{
  "Description": "Legacy Two Tier Template",
  "Parameters": {
    "NumberOfNodes": {
      "Type": "Number",
      "Description": "The number of EC2 nodes the service should have.",
      "Default": 1
    },
    "NodeSize": {
      "Type": "String",
      "Description": "The type of node to use for your system",
      "Default": "t2.micro"
    },
    "AMI": {
        "Type": "String",
        "Default": "ami-066333d9c572b0680"
    }
  },
  "Mappings": {
    "SubnetConfig": {
      "VPC": { "CIDR": "10.0.0.0/16" },
      "Public0": { "CIDR": "10.0.0.0/24", "AZ": "us-west-2a" },
      "Private0": { "CIDR": "10.0.1.0/24", "AZ": "us-west-2a" },
      "Public1": { "CIDR": "10.0.2.0/24", "AZ": "us-west-2b" }
    }
  },

  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"] }
      }
    },
    "PublicSubnet0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::FindInMap": ["SubnetConfig", "Public0", "AZ"]
        },
        "CidrBlock": { "Fn::FindInMap": ["SubnetConfig", "Public0", "CIDR"] },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PrivateSubnet0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::FindInMap": ["SubnetConfig", "Private0", "AZ"]
        },
        "CidrBlock": { "Fn::FindInMap": ["SubnetConfig", "Private0", "CIDR"] },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::FindInMap": ["SubnetConfig", "Public1", "AZ"]
        },
        "CidrBlock": { "Fn::FindInMap": ["SubnetConfig", "Public1", "CIDR"] },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "RoutesForPublicSubnet": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "RoutesForPrivateSubnet": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "GenericNACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "GatewayAttachmentToVPC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "GatewayToInternet"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    }, 
    "RouteToGateway": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "GatewayToInternet"
        },
        "RouteTableId": {
          "Ref": "RoutesForPublicSubnet"
        }
      }
    },
    "RouteToNat": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "NATInstance"
        },
        "RouteTableId": {
          "Ref": "RoutesForPrivateSubnet"
        }
      }
    },
    "NATInstance": {
      "DependsOn": ["GatewayAttachmentToVPC"],
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::FindInMap": ["SubnetConfig", "Private0", "AZ"]
        },
        "ImageId": "ami-066333d9c572b0680",
        "InstanceType": "m3.medium",
        "SecurityGroupIds": [{ "Ref": "InstancesToNATSecurityGroup" }],
        "SourceDestCheck": false,
        "SubnetId": { "Ref": "PublicSubnet0" }
      }
    },
    "InstancesToNATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Instances to NAT instance",
        "SecurityGroupIngress": [
          {
            "FromPort": 0,
            "IpProtocol": -1,
            "SourceSecurityGroupId": { "Ref": "LBToInstancesSecurityGroup" },
            "ToPort": 65535
          }
        ],
        "VpcId": { "Ref": "VPC" }
      }
    },
    "NACLInboundEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "NetworkAclId": {
          "Ref": "GenericNACL"
        },
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 100
      }
    },
    "NACLOutboundEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "GenericNACL"
        },
        "PortRange": {
          "From": 0,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 100
      }
    },
    "NACLBindingForPublicSubnet": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet0"
        },
        "NetworkAclId": {
          "Ref": "GenericNACL"
        }
      }
    },
    "NACLBindingForPrivateSubnet": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet0"
        },
        "NetworkAclId": {
          "Ref": "GenericNACL"
        }
      }
    },
    "RoutesBindingForPublicSubnet": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RoutesForPublicSubnet"
        },
        "SubnetId": {
          "Ref": "PublicSubnet0"
        }
      }
    },
    "RoutesBindingForPrivateSubnet": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RoutesForPrivateSubnet"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet0"
        }
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": ["GatewayAttachmentToVPC"],
      "Properties": {
        "Listeners": [
          {
            "InstancePort": 8888,
            "InstanceProtocol": "HTTP",
            "LoadBalancerPort": 80,
            "Protocol": "HTTP"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "InternetToLBSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "PublicSubnet"
          }
        ]
      }
    },
    "InstancesGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": [ "InstancesTemplate" ],
      "Properties": {
        "Cooldown": 60,
        "DesiredCapacity": {
          "Ref": "NumberOfNodes"
        },
        "HealthCheckGracePeriod": 30,
        "HealthCheckType": "EC2",
        "LaunchTemplate": {
          "LaunchTemplateId": { "Ref": "InstancesTemplate" },
          "Version": { "Fn::GetAtt": "InstancesTemplate.DefaultVersionNumber" }
        },
        "LoadBalancerNames": [
          {
            "Ref": "LoadBalancer"
          }
        ],
        "MaxSize": {
          "Ref": "NumberOfNodes"
        },
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ],
        "MinSize": {
          "Ref": "NumberOfNodes"
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "PrivateSubnet0"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": 1,
          "MinInstancesInService": 1,
          "PauseTime": "30",
          "WaitOnResourceSignals": false
        }
      }
    },
    "InstancesTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "ImageId": {
            "Ref": "AMI"
          },
          "IamInstanceProfile": {
            "Name": { "Ref": "InstanceProfile" }
          },
          "Monitoring": { "Enabled": true },
          "SecurityGroupIds": [{ "Fn::GetAtt": "LBToInstancesSecurityGroup.GroupId" }],
          "InstanceType": {
            "Ref": "NodeSize"
          }
        }
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        ],
        "Path": "/"
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "LBToInstancesSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Load balancer to instances",
        "SecurityGroupIngress": [
          {
            "FromPort": 8888,
            "IpProtocol": "TCP",
            "SourceSecurityGroupId": {
              "Ref": "InternetToLBSecurityGroup"
            },
            "ToPort": 8888
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetToLBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Internet to load balancer",
        "SecurityGroupIngress": [
          {
            "FromPort": 80,
            "IpProtocol": "TCP",
            "CidrIp": "0.0.0.0/0",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    }
  },
  "Outputs": {
    "LoadBalancerHostName": {
      "Description": "The host name of the load balancer",
      "Value": { "Fn:GetAtt": "LoadBalancer.DNSName" }
    }
  }
}
